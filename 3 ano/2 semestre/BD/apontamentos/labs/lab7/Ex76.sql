-- ## Motoshop ##

-- CREATE DATABASE MOTOSHOP;
-- use MOTOSHOP;



CREATE TABLE MOTORCYCLE(
	FRAME_NO			INT,
	MODEL				VARCHAR(10),
	BRAND				VARCHAR(10)	NOT NULL,
	YEAR				INT			NOT NULL,
	CC					INT			NOT NULL,
	HP					INT			NOT NULL,
	PRIMARY KEY(FRAME_NO)
);


CREATE TABLE MOTO_STATION(
	NUMBER			INT,
	LOCALIZATION	VARCHAR(20)		NOT NULL,
	CAPACITY		INT,
	PRIMARY KEY(NUMBER)
);


CREATE TABLE RENTABLE_BIKE(
	FRAME_NO			INT,
	PRICE_KM			INT			NOT NULL,
	TOTAL_KM			INT,
	MOTO_STATION		INT			NOT NULL, -- HAS TO BE IN A MOTOSTATION
	PRIMARY KEY(FRAME_NO),
	FOREIGN KEY(FRAME_NO) REFERENCES MOTORCYCLE(FRAME_NO),
	FOREIGN KEY(MOTO_STATION) REFERENCES MOTO_STATION(NUMBER)
);


CREATE TABLE STOCK_BIKE(
	FRAME_NO			INT,
	PRICE				INT			NOT NULL,
	STAND				INT			NOT NULL, -- HAS TO BE IN A STAND
	PRIMARY KEY(FRAME_NO),
	FOREIGN KEY(FRAME_NO) REFERENCES MOTORCYCLE(FRAME_NO),
	-- FOREIGN KEY(STAND) REFERENCES STAND(NUMBER),
);


CREATE TABLE OWNED_BIKE(
	FRAME_NO			INT,
	LICENSE_PLATE		INT			NOT NULL,
	TOTAL_KM			INT,
	B_OWNER				INT			NOT NULL, -- HAS TO HAVE AN OWNER
	PRIMARY KEY(FRAME_NO),
	FOREIGN KEY(FRAME_NO) REFERENCES MOTORCYCLE(FRAME_NO),
	--FOREIGN KEY(B_OWNER) REFERENCES CLIENT(NIF),
);


CREATE TABLE STAND(
	NUMBER				INT,
	LOCALIZATION		VARCHAR(20)		NOT NULL,
	PRIMARY KEY(NUMBER)
);

CREATE TABLE CLIENT(
	NIF					INT,
	C_NAME				VARCHAR(30)		NOT NULL,
	C_ADDRESS			VARCHAR(30)		NOT NULL,
	PRIMARY KEY(NIF)
);

CREATE TABLE WORKSHOP(
	NUMBER				INT,
	LOCALIZATION		VARCHAR(20)		NOT NULL,
	PRIMARY KEY(NUMBER)
);

CREATE TABLE REVISION(
	FRAME_NO			INT,
	R_DATE				DATE,
	PRICE				INT,
	WORKSHOP			INT				NOT NULL,
	MECHANIC			INT				NOT NULL,
	PRIMARY KEY(FRAME_NO, R_DATE),
	FOREIGN KEY(FRAME_NO) REFERENCES MOTORCYCLE(FRAME_NO),
	FOREIGN KEY(WORKSHOP) REFERENCES WORKSHOP(NUMBER),
	--FOREIGN KEY(MECHANIC) REFERENCES MECHANIC(NUMBER),
);


CREATE TABLE CHANGED_PARTS(
	FRAME_NO			INT,
	R_DATE				DATE,
	PART				INT,
	PRIMARY KEY(FRAME_NO, R_DATE, PART),
	FOREIGN KEY(FRAME_NO, R_DATE) REFERENCES REVISION(FRAME_NO, R_DATE),
);


CREATE TABLE STAFF_MEMBER(
	NUMBER				INT,
	M_NAME				VARCHAR(20)			NOT NULL,
	M_ADDRESS			VARCHAR(30)			NOT NULL,
	PRIMARY KEY(NUMBER)
);

CREATE TABLE SALESMAN(
	NUMBER				INT,
	WORK_STAND			INT,
	PRIMARY KEY(NUMBER),
	FOREIGN KEY(NUMBER) REFERENCES STAFF_MEMBER(NUMBER),
	FOREIGN KEY(WORK_STAND) REFERENCES STAND(NUMBER),
);

CREATE TABLE MECHANIC(
	NUMBER				INT,
	WORK_WORKSHOP		INT,
	PRIMARY KEY(NUMBER),
	FOREIGN KEY(NUMBER) REFERENCES STAFF_MEMBER(NUMBER),
	FOREIGN KEY(WORK_WORKSHOP) REFERENCES WORKSHOP(NUMBER)
);

CREATE TABLE RENT(
	FRAME_NO			INT,
	R_DATE				DATE,
	CLIENT				INT,
	PRIMARY KEY(FRAME_NO, R_DATE),
	FOREIGN KEY(FRAME_NO) REFERENCES RENTABLE_BIKE(FRAME_NO),
);

CREATE TABLE SALE(
	INVOICE_NO			INT,
	CLIENT				INT,
	MOTORCYCLE			INT,
	SELLER				INT,
	PRIMARY KEY(INVOICE_NO),
	FOREIGN KEY(CLIENT) REFERENCES CLIENT(NIF),
	FOREIGN KEY(MOTORCYCLE) REFERENCES STOCK_BIKE(FRAME_NO),
	FOREIGN KEY(SELLER) REFERENCES SALESMAN(NUMBER),
);
	
	
ALTER TABLE REVISION
	ADD CONSTRAINT REVISION_MECHANIC FOREIGN KEY(MECHANIC) REFERENCES MECHANIC(NUMBER);

ALTER TABLE OWNED_BIKE
	ADD CONSTRAINT BIKE_OWNER FOREIGN KEY(B_OWNER) REFERENCES CLIENT(NIF);

ALTER TABLE STOCK_BIKE
	ADD CONSTRAINT BIKE_IN_STAND FOREIGN KEY(STAND) REFERENCES STAND(NUMBER);



-- Check constraints
ALTER TABLE MOTORCYCLE ADD CHECK(FRAME_NO > 0 AND FRAME_NO < 999999999); 
ALTER TABLE MOTORCYCLE ADD CHECK(YEAR > 1900 AND YEAR <= YEAR(getdate()));
ALTER TABLE MOTORCYCLE ADD CHECK(CC > 0 AND CC < 5000);
ALTER TABLE MOTORCYCLE ADD CHECK(HP > 0 AND HP < 20000);

ALTER TABLE MOTO_STATION ADD CHECK(CAPACITY > 0);

ALTER TABLE RENTABLE_BIKE ADD CHECK(PRICE_KM > 0);
ALTER TABLE RENTABLE_BIKE ADD CHECK(TOTAL_KM > 0);

ALTER TABLE STOCK_BIKE ADD CHECK(PRICE > 0);

-- assumindo uma matricula numérica apenas, para simplificar
ALTER TABLE OWNED_BIKE ADD CHECK(LICENSE_PLATE > 0);
ALTER TABLE OWNED_BIKE ADD CHECK(TOTAL_KM > 0);

ALTER TABLE REVISION ADD CHECK(PRICE > 0);

ALTER TABLE CHANGED_PARTS ADD CHECK(PART > 0);
