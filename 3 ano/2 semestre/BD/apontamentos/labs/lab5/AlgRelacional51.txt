-- a) Obtenha uma lista contendo os projetos e funcionários (ssn e nome completo) que lá trabalham.
-- π Pname,Fname,Lname,Ssn (((works_on) ⨝ Essn=Ssn (employee)) ⨝ Pno=Pnumber (project))
-- π Pname,Fname,Lname,Ssn (((project) ⨝ Pnumber=Pno (works_on)) ⨝ Essn=Ssn (employee))

-- b) Obtenha o nome de todos os funcionários supervisionados por ‘Carlos D Gomes’;
-- π Name (σ Fname='Carlos'∧ Minit='D' ∧ Lname='Gomes' (ρ Name←Fname (π Fname, Super_ssn employee) ⨝ Super_ssn=Ssn (π Fname, Minit, Lname, Ssn employee)))

-- c) Para cada projeto, listar o seu nome e o número de horas (por semana) gastos nesse projeto por todos os funcionários;
-- γ Pname; sum(Hours)->total_horas (project ⟕ Pnumber=Pno works_on)

-- d) Obter o nome de todos os funcionários do departamento 3 que trabalham mais de 20 horas por semana no projeto ‘Aveiro Digital’;
-- π Fname, Lname (σ Dno=3 ∧ Hours>20 ∧ Pname = 'Aveiro Digital' ((employee ⟖ Ssn=Essn works_on) ⟕ Pno=Pnumber project))

-- e) Nome dos funcionários que não trabalham para projetos;
-- π Fname, Lname (σ Essn=null (employee ⟕ Ssn=Essn works_on))

-- f) Para cada departamento, listar o seu nome e o salário médio dos seus funcionários do sexo feminino;
-- γ Dname; avg(Salary)->avg_salary (department ⟕ Dnumber=Dno (σ Sex='F' (employee)))

-- g) Obter uma lista de todos os funcionários com mais do que dois dependentes
-- σ nr_dependents > 2 (γ Fname, Lname; count(Essn)->nr_dependents (employee ⟕ Ssn=Essn dependent))

-- h) Obtenha uma lista de todos os funcionários gestores de departamento que não têm dependentes;
-- π Fname, Lname (σ Essn=null ((employee ⨝ Ssn=Mgr_ssn department) ⟕ Ssn=Essn dependent))

-- i) Obter os nomes e endereços de todos os funcionários que trabalham em, pelo menos, um projeto localizado em Aveiro mas o seu departamento não tem nenhuma localização em Aveiro.
-- π Fname, Lname, Address ((employee ⨝ Ssn=Essn works_on ⨝ Pno=Pnumber (σ Plocation = 'Aveiro' project)) ⨝ Dno=Dnumber (σ Dlocation ≠ 'Aveiro' (department ⟕ dept_location)))



